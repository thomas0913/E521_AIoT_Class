/// <reference types="node" />
import { ExecOptionsWithBufferEncoding } from 'child_process';
import LibCamera from './LibCamera';
/**
 * Get the string command of a base command with an array of args
 * @param base The base command without any flags
 * @param args An array of args command args
 * @returns The command string
 */
export declare function cmd(base: string, args?: string[]): string;
/**
 * Execute a command
 * @param command The command string
 * @param options Any options to pass to the node exec function
 * @returns A promise that resolves to the stdout of the command that was run
 */
export declare function run(command: string, options?: ExecOptionsWithBufferEncoding): Promise<string>;
/**
 * Convert libcamera options to command line args
 * @param options Options for the libcamera service
 * @returns An array of command line args
 */
export declare function convertOptionsToCmdArgs(options: Partial<LibCamera.OptionsObject>): string[];
export declare const optionConverterMap: Partial<Record<LibCamera.OptionKeys, LibCamera.OptionConverter>>;
