import LibCamera from './LibCamera';
/**
 * Wrapper function for the [`libcamera-jpeg` command](https://www.raspberrypi.com/documentation/accessories/camera.html#libcamera-jpeg)
 *
 * @param options The options object sent to `libcamera-jpeg` as command-line flags
 */
export declare function jpeg(options: Partial<LibCamera.StillOptionsObject>): Promise<string>;
/**
 * Wrapper function for the [`libcamera-still` command](https://www.raspberrypi.com/documentation/accessories/camera.html#libcamera-still)
 *
 * @param options The options object sent to `libcamera-still` as command-line flags
 */
export declare function still(options: Partial<LibCamera.StillOptionsObject>): Promise<string>;
/**
 * Wrapper function for the [`libcamera-vid` command](https://www.raspberrypi.com/documentation/accessories/camera.html#libcamera-vid)
 *
 * @param options The options object sent to `libcamera-vid` as command-line flags
 */
export declare function vid(options: Partial<LibCamera.VideoOptionsObject>): Promise<string>;
/**
 * Wrapper function for the [`libcamera-raw` command](https://www.raspberrypi.com/documentation/accessories/camera.html#libcamera-raw)
 *
 * @param options The options object sent to `libcamera-raw` as command-line flags
 */
export declare function raw(options: Partial<LibCamera.VideoOptionsObject>): Promise<string>;
export declare const libcamera: {
    jpeg: typeof jpeg;
    still: typeof still;
    vid: typeof vid;
    raw: typeof raw;
};
export default libcamera;
